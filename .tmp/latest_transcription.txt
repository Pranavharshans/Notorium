 and the main symbols and very few examples of flowcharts in action. So you would have definitely come across flowcharts before, maybe not in quite a formal way. So a flowchart is a visual way to show the steps involved in an algorithm. Now the word algorithm, my third of the game, I don't know what it means formally. An algorithm is a set of instructions which solve a problem. A computer program is an implementation of an algorithm, so we use them for time in your life and in a computer. So visual meaning they've got shapes and we can see them as opposed to just written text. Now there are four main flowchart symbols you need to know. The top left one is just a start or end symbol. You generally just write start or end and it will show you where to begin and where to end in your algorithm. A rectangle is just a process being carried out. You usually write a little description of it. So a different instruction can get written in a rectangle. A parallelogram is really a modified version of a rectangle. It's just an input or output. If you just use a rectangle, that would be fine. But if you really want to be clear, there's higher input, to ask you for something, or an output, showing something. You can use a parallelogram. And then the most important one is a diamond, which is a decision to be made. Now, this one is where people go wrong. We should ideally only have two options. So it's a really big question, which has only two responses, a binary question. So for example, if you said, what is your name? something like are you above 180 centimeters, that would be a yes or no answer would be suitable. So you've got two pathways coming out there, one for true or yes and one for false or no. And all of these are connected with arrows. So let's look at an example flowchart. This is one I made to have a good look at it, see if you can figure out what it's doing, because a common question will be trying to interpret the flowchart. So you can see we start here on the end to write. We start by asking do you have an account. If you don't, you go to the sign-up screen and it works as a background to re-ask a question. If you do have an account, you're going to enter your username and password, it's in the box, you then check, do the account if there's match, you then don't, you loop back and re-enter the username and password If they do match it a success and the program ends So as you probably figured out this is for a website where you logging in with a username and password Fancy words authenticating If you are authenticating you are checking somebody who they saying they are Now, you might do this flowchart a little bit differently. It's not perfect. Hopefully, you can see how I've used these decision shapes, and they are yes or no. And the arrows, hopefully, are relatively clear in the direction of following. Make sure every arrow has an arrowhead. You can just do a straight line. Make sure it's got a direction. And it's fine to loop back. You often do this when you want to repeat something. Just make sure it rejoins at the place you wanted to, like here, and like down here. Now, this symbol bottom left I didn't actually show you, but it's a bit different to the success box, because I've got an additional two lines inside this process rectangle. Now that is sometimes called a subroutine, and you'll sometimes see that when it is its own program. So for example, sign up screen could be a whole other program. This flowchart would get really, really big and really complicated if I included all of the steps for this sign up screen. So this little rectangle with the lines through it can often be used to symbolise another flowchart in a subroutine. So if you wanted to actually show that flowchart, you might start with this sign up screen, So it should match up to sign up screen that my rectangle matches up to all the words in my star symbol. And what you might do, you might sign up and you might first of all enter your username and password, but if you sign up for a website, you might give it a username and password. Then for example, you might as a web developer need to check does a user exist already? Because if somebody exists already with those details, you can't register a new person. So if a user does exist already, that means I'm going to go back and re-enter their details again. If a user does exist already with those details, you should save the details into the database, for example. And that will be it. I'm going to end at that point. This flowchart is relatively simple, but can really over-complicate that other one. So you will occasionally see symbols like this use to break up complicated flowcharts. But the key thing is, are you able to draw simple flowcharts? Do you know what the symbols mean? Are you able to interpret flowcharts on a page? That is the key thing you need to know for this topic.